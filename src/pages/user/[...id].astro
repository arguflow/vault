---
import {
  UserDTOWithVotesAndCards,
  isUserDTOWithVotesAndCards,
} from "../../../utils/apiTypes";
import Footer from "../../components/Footer.astro";
import SearchLayout from "../../layouts/SearchLayout.astro";
import { UserCardDisplay } from "../../components/UserCardDisplay";

const apiHost = import.meta.env.API_HOST as string;
let { id } = Astro.params;
id = id?.split("&")[0];
const requestParams = Astro.request.url.split("?")[1];
const params = new URLSearchParams(requestParams);
const page = Number(params.get("page")) || 1;

let user: UserDTOWithVotesAndCards | null = null;
try {
  const queryResult = await fetch(`${apiHost}/user/${id ?? ""}/${page}`, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
    },
  });

  if (queryResult.status !== 200) {
    console.error("Error fetching user", queryResult);
  }

  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
  const maybeUser = await queryResult.json();
  if (isUserDTOWithVotesAndCards(maybeUser)) {
    user = maybeUser;
  } else {
    console.error("Error fetching user");
  }
} catch (e) {
  console.error("Error fetching user", e);
}
---

<SearchLayout>
  <div class="mx-auto w-full max-w-6xl px-4">
    <h1
      class="my-8 line-clamp-1 break-all text-center text-lg font-bold min-[320px]:text-xl sm:text-4xl"
    >
      {user ? user.username ?? user.email : "User not found"}
    </h1>
    {
      user && (
        <>
          <UserCardDisplay id={id ?? ""} page={page} client:load />
        </>
      )
    }
  </div>
  <div class="flex-1"></div>
  <Footer />
</SearchLayout>
