---
import SearchLayout from '../layouts/SearchLayout.astro'
import RegisterOrUserProfile from '../components/RegisterOrUserProfile'
import Footer from '../components/Footer.astro'
import ResultsPage from '../components/ResultsPage'
import type { ScoreCardDTO } from '../../utils/apiTypes'
import SearchForm from '../components/SearchForm'

const apiHost = import.meta.env.API_HOST

const requestParams = Astro.request.url.split('?')[1]
const params = new URLSearchParams(requestParams)
const query = params.get('q') || ''
const page = Number(params.get('page')) || 1
let initialScoreCards: ScoreCardDTO[] = []
try {
	const initialScoreCardsResult = await fetch(`${apiHost}/card/search/${page}`, {
		method: 'POST',
		headers: {
			'Content-Type': 'application/json'
		},
		credentials: 'include',
		body: JSON.stringify({
			content: query
		})
	})

	const initialScoreCardsJson = await initialScoreCardsResult?.json()
	initialScoreCards = initialScoreCardsJson ?? []
} catch (e) {
	console.error(e)
}
---

<SearchLayout>
	<div class="mx-auto flex h-[60px] w-full max-w-6xl items-center justify-between px-4">
		<a class="flex w-full items-center" href="/">
			<img class="w-6 sm:w-12" src="/logo_transparent.png" alt="Logo" />
			<div class="hidden min-[360px]:block min-[380px]:text-xl sm:text-4xl">
				Arguflow<span class="text-magenta">Vault</span>
			</div>
		</a>
		<div class="flex w-full items-center justify-end space-x-1 sm:space-x-4">
			<a href="/create" class="min-[420px]:text-lg"> Create Evidence</a>
			<div>
				<RegisterOrUserProfile client:only="solid-js" />
			</div>
		</div>
	</div>
	<div class="mt-8 w-full max-w-4xl px-4 sm:px-8 md:px-20">
		<SearchForm client:load query={query} />
	</div>
	<ResultsPage page={page} query={query} defaultResultCards={initialScoreCards} client:load />
	<div class="flex-1"></div>
	<Footer />
</SearchLayout>
