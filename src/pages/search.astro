---
import {
	BiLogosGithub,
	BiLogosTwitch,
	BiLogosTwitter,
	BiLogosYoutube,
	BiRegularChevronLeft,
	BiRegularChevronRight
} from 'solid-icons/bi'
import type { CardDTO } from '../../utils/apiTypes'
import ThemeModeController from '../components/ThemeModeController'
import SearchLayout from '../layouts/SearchLayout.astro'
import RegisterOrUserProfile from '../components/RegisterOrUserProfile'
import EvidenceCard from '../components/EvidenceCard'
const apiHost = import.meta.env.API_HOST
const requestParams = Astro.request.url.split('?')[1]
const params = new URLSearchParams(requestParams)
const query = params.get('q')
const page = Number(params.get('page')) || 1

let cards: CardDTO[] = []

try {
	const queryResult = await fetch(`${apiHost}/card/search/${page}`, {
		method: 'POST',
		headers: {
			'Content-Type': 'application/json'
		},
		body: JSON.stringify({
			content: query ?? ''
		})
	})

	if (queryResult.status !== 200) {
		console.error('Error fetching cards', queryResult)
		return Astro.redirect('/404')
	}

	cards = await queryResult.json()
} catch (e) {
	console.error('Error fetching cards', e)
	return Astro.redirect('/404')
}
---

<SearchLayout>
	<div class="flex w-full items-center justify-end space-x-4 px-4 h-[60px]">
		<a
			href="/create"
			target="_blank"
			class="text-xl text-neutral-600 dark:text-neutral-200"
		>
			Create Evidence
		</a>
		<div>
			<ThemeModeController client:only="solid-js" />
		</div>
		<div>
			<RegisterOrUserProfile client:only="solid-js" />
		</div>
	</div>
	<div class="mt-12 flex w-full flex-col items-center space-y-4">
		<a class="flex w-full items-center justify-center" href="/">
			<img class="w-12" src="/logo_transparent.png" alt="Logo" />
			<h1 class="text-4xl">
				Search Arguflow<span class="text-magenta">Vault</span>
			</h1>
		</a>
		<div class="flex w-full max-w-6xl flex-col space-y-4 px-4 sm:px-8 md:px-20">
			{
				cards.map((card) => (
					<div>
						<EvidenceCard card={card} client:load />
					</div>
				))
			}
		</div>
	</div>
	<div
		class=`mt-12 flex w-full ${page === 1 ? 'justify-end' : 'justify-between'} px-4 sm:px-8 md:px-20`
	>
		{
			page != 1 && (
				<a
					class="flex w-fit rounded bg-neutral-50 p-2 text-center hover:bg-neutral-100 dark:bg-neutral-700 dark:hover:bg-neutral-800"
					href={`/search?q=${query}&page=${page - 1}`}
				>
					Previous <BiRegularChevronLeft class="h-6 w-6" />
				</a>
			)
		}
		<a
			class="flex w-fit rounded bg-neutral-50 p-2 text-center hover:bg-neutral-100 dark:bg-neutral-700 dark:hover:bg-neutral-800"
			href=`/search?q=${query}&page=${page + 1}`
		>
			Next <BiRegularChevronRight class="h-6 w-6" />
		</a>
	</div>
	<div class="flex-1"></div>
	<div class="flex w-full flex-col items-center space-y-4 py-4">
		<div class="flex w-full justify-center space-x-3">
			<a href="https://twitter.com/arguflowai" target="_blank">
				<BiLogosTwitter size={30} />
			</a>
			<a href="https://twitch.tv/arguflow" target="_blank">
				<BiLogosTwitch size={30} />
			</a>
			<a href="https://www.youtube.com/@arguflow">
				<BiLogosYoutube size={30} />
			</a>
			<a href="https://github.com/orgs/arguflow/repositories" target="_blank">
				<BiLogosGithub size={30} />
			</a>
		</div>
		<div class="text-neutral-600 dark:text-neutral-200">contact@arguflow.gg</div>
	</div>
</SearchLayout>
